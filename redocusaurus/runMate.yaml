openapi: 3.0.3
info:
  title: RunMate API
  version: 1.0.5
  description: API для приложения поиска компаньон для пробежек.
servers:
  - url: https://api.RunMate.com
    description: Production server
tags:
  - name: Users
    description: Эндпоинты для работы с пользователями
  - name: Runs
    description: Эндпоинты для поиска и работы с пробежками
  - name: Chats
    description: Эндпоинты для работы с чатами
  - name: Map
    description: Эндпоинты для данных карты
paths:
  /api/runs:
    get:
      tags:
        - Runs
      summary: Получение списка пробежек пользователя
      responses:
        '200':
          description: Список пробежек пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Run'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - Runs
      summary: Создание новой пробежки
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Run'
      responses:
        '201':
          description: Пробежка создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/runs/{runId}:
    parameters:
      - name: runId
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
        - Runs
      summary: Редактирование пробежки
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Run'
      responses:
        '200':
          description: Пробежка обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/runs/search:
    post:
      tags:
        - Runs
      summary: Поиск пробежек
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: string
                  example: Москва
                  description: Фильтр по месту старта пробежек
                pace:
                  type: array
                  items:
                    type: string
                    enum:
                      - slow
                      - medium
                      - fast
                  example:
                    - medium
                    - fast
                  description: Фильтр по темпу
                distance:
                  type: array
                  items:
                    type: integer
                  example:
                    - 5
                    - 10
                  description: Фильтр по дистанции
                page:
                  type: integer
                  example: 1
                  description: Номер страницы
                per_page:
                  type: integer
                  example: 10
                  description: Количество пробежек на странице
              required:
                - page
                - per_page
      responses:
        '200':
          description: Список доступных пробежек
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 100
                  runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Run'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - Users
      summary: Получение информации о другом пользователе
      responses:
        '200':
          description: Данные пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/user/profile:
    get:
      tags:
        - Users
      summary: Получение данных текущего пользователя
      responses:
        '200':
          description: Данные пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Users
      summary: Редактирование данных профиля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Профиль обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/chats:
    get:
      tags:
        - Chats
      summary: Получение списка чатов
      responses:
        '200':
          description: Список чатов
          content:
            application/json:
              schema:
                type: object
                properties:
                  chats:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chat'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/chats/{chatId}:
    parameters:
      - name: chatId
        in: path
        required: true
        schema:
          type: integer
          example: 42
    get:
      tags:
        - Chats
      summary: Получение сообщений чата
      responses:
        '200':
          description: Список сообщений
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - Chats
      summary: Отправка сообщения
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: Привет! Как дела?
      responses:
        '201':
          description: Сообщение отправлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/chats/{chatId}/attachments:
    post:
      tags:
        - Chats
      summary: Загрузка вложения в чат
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: integer
            example: 42
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Вложение (файл)
      responses:
        '201':
          description: Вложение загружено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/chats/start:
    post:
      tags:
        - Chats
      summary: Начать чат с другим пользователем
      description: >-
        Этот запрос проверяет существование чата с указанным пользователем и
        создает новый, если чата не существует.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 123
                  description: ID пользователя, с которым необходимо начать чат
      responses:
        '201':
          description: Чат начат
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/map-data:
    get:
      tags:
        - Map
      summary: Данные для карты
      description: >-
        Получение данных для отображения карты, включая местоположение текущего
        пользователя и доступные места стартов пробежек.
      responses:
        '200':
          description: Данные успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_location:
                    type: object
                    properties:
                      latitude:
                        type: number
                        format: float
                        example: 55.7558
                      longitude:
                        type: number
                        format: float
                        example: 37.6173
                  runs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 101
                        location:
                          type: object
                          properties:
                            latitude:
                              type: number
                              format: float
                              example: 55.7512
                            longitude:
                              type: number
                              format: float
                              example: 37.6184
                        distance:
                          type: string
                          example: 5 km
                        pace:
                          type: string
                          enum:
                            - slow
                            - medium
                            - fast
                          example: medium
                        date:
                          type: string
                          format: date-time
                          example: '2024-11-20T15:30:00Z'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    Run:
      type: object
      required:
        - id
        - date
        - location
      properties:
        id:
          type: integer
        date:
          type: string
          format: date-time
        location:
          type: string
    Chat:
      type: object
      properties:
        id:
          type: integer
    Message:
      type: object
      properties:
        content:
          type: string
    Attachment:
      type: object
      required:
        - id
        - message_id
        - file_url
        - file_type
      properties:
        id:
          type: integer
        message_id:
          type: integer
        file_url:
          type: string
          format: uri
          example: https://cdn.example.com/uploads/file.pdf
        file_type:
          type: string
          enum:
            - image
            - video
            - document
          example: document
        file_size:
          type: integer
  responses:
    BadRequest:
      description: Неверный запрос
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              message:
                type: string
                example: Неверный запрос.
    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 404
              message:
                type: string
                example: Ресурс не найден.
    ServerError:
      description: Ошибка сервера
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 500
              message:
                type: string
                example: Внутренняя ошибка сервера.
